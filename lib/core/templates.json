{"preview":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>预览页</title>\r\n    <link href=\"http://b0.hucdn.com/lib/nas_base.css\" rel=\"stylesheet\" media=\"all\">\r\n    <script src=\"http://b0.hucdn.com/lib/react.js?v=1\"></script>\r\n    <script src=\"http://b0.hucdn.com/lib/react-dom.js?v=1\"></script>\r\n    <script src=\"http://b0.hucdn.com/lib/browser.min.js?v=1\"></script>\r\n    <script src=\"http://b0.hucdn.com/lib/jquery.min.js?v=1\"></script>\r\n    <script type=\"text/javascript\">\r\n        ! function(a) {\r\n            function b() {\r\n                a.rem = f.getBoundingClientRect().width / 16, f.style.fontSize = a.rem + \"px\"\r\n            }\r\n            var c, d = a.navigator.appVersion.match(/iphone/gi) ? a.devicePixelRatio : 1,\r\n                    e = 1 / d,\r\n                    f = document.documentElement,\r\n                    g = document.createElement(\"meta\");\r\n            if (a.dpr = d, a.addEventListener(\"resize\", function() {\r\n                clearTimeout(c), c = setTimeout(b, 300)\r\n            }, !1), a.addEventListener(\"pageshow\", function(a) {\r\n                a.persisted && (clearTimeout(c), c = setTimeout(b, 300))\r\n            }, !1), f.setAttribute(\"data-dpr\", d), g.setAttribute(\"name\", \"viewport\"), g.setAttribute(\"content\", \"initial-scale=\" + e + \", maximum-scale=\" + e + \", minimum-scale=\" + e + \", user-scalable=no\"), f.firstElementChild) f.firstElementChild.appendChild(g);\r\n            else {\r\n                var h = document.createElement(\"div\");\r\n                h.appendChild(g), document.write(h.innerHTML)\r\n            }\r\n            b()\r\n        }(window);\r\n    </script>\r\n    <!--组件css-->\r\n    <style type=\"text/css\">\r\n        /*布点一行一列*/\r\n        .anchorR1{\r\n            overflow: hidden;\r\n        }\r\n        .anchorR1 a{\r\n            float:left;\r\n            margin-right: .128rem;\r\n        }\r\n        .anchorR1 a:last-child{\r\n            float: right;\r\n            margin-right: 0;\r\n        }\r\n        .anchorR1 img{\r\n            display: block;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n<div id=\"top-wrap\"></div>\r\n<script id=\"component-data\" type=\"text/data\">\r\n{{{componentsData}}}\r\n</script>\r\n<script type=\"text/babel\">\r\n    //获取组件数据\r\n    var data=[];\r\n    try {\r\n        data = JSON.parse($('#component-data').html());\r\n    } catch (e) {\r\n    }\r\n    //定义组件\r\n    /*布点一行一列*/\r\n    var AnchorR1= React.createClass({\r\n        render : function(){\r\n            var data=this.props.data,containerStyle={backgroundColor:data.bgColor,paddingTop:data.paddingTop+'rem',paddingBottom:data.paddingBottom+'rem'};\r\n            return <div className=\"anchorR1\" style={containerStyle} data-module data-aid={data.aid}>\r\n            {\r\n                $(data.anchors).map(function(index,em){\r\n                    var style={\r\n                        width:em.width+'rem',\r\n                        height:em.height+'rem'\r\n                    };\r\n                    return <a key={index} href={em.link} style={style}>{em.img && <img src={em.img}/>}</a>\r\n                }).get()\r\n            }\r\n            </div>\r\n        }\r\n    });\r\n    var moduleAry=[];\r\n    //组件映射表\r\n    var compmentMap={\r\n        AnchorR1:AnchorR1\r\n    };\r\n    //生成组件\r\n    $(data).each(function(index,em){\r\n        var compment=compmentMap[em.key];\r\n         compment && moduleAry.push(React.createElement(compment,{key:index,data:em.config}));\r\n    });\r\n    ReactDOM.render(<div>{moduleAry}</div>,document.getElementById('top-wrap'));\r\n</script>\r\n<!--组件js-->\r\n<script type=\"text/javascript\">\r\n</script>\r\n</body>\r\n</html>\r\n","jsx":"'use strict';\r\nvar React = require('react-native');\r\n{{{requireCom}}}\r\nvar {\r\nText,\r\nView,\r\nImage,\r\nPlatform\r\n} = React;\r\n\r\nvar {\r\nHBApp ,\r\n} = (Platform.OS == 'ios') ? require('nas_engine/src/rn/ios-interface.js') : require('nas_engine/src/rn/android-interface.js');\r\nvar Dimensions = require('Dimensions');\r\nvar { width, height } = Dimensions.get('window'),\r\nphone = {\"width\":width,\"height\":height},\r\nretio = 750 / phone.width;\r\n\r\nconst Index = React.createClass({\r\nrender() {\r\nreturn (\r\n<View>\r\n    {{{compoLists}}}\r\n</View>\r\n);\r\n}\r\n});\r\n\r\n\r\nvar styles = React.StyleSheet.create({\r\n\r\n});\r\n\r\nHBApp.Methods.screen.setHeight({{{viewHeight}}}/retio);\r\n\r\nReact.AppRegistry.registerComponent('HBApp', () => Index);"}